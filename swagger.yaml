openapi: 3.0.0
info:
  title: API Documentation
  description: RESTFUL API DOCUMENTATION DU PROJET DBA
  version: 0.1.9
servers:
  - url: http://localhost:3001
    description: Serveur local (development)
components:
  securitySchemes:
    jwt:
      type: http
      scheme: bearer
      in: header
      bearerFormat: jwt
      description: JWT Authorization
  schemas:

    # Schema du medecin
    Medecin:
      type: object
      properties:
        id: 
          type: integer
          description: l'identifiant du medecin
          readonly: true
        numMedecin:
          type: string
          description: le numero du medecin (5 caract√®res maximum)
        nom:
          type: string
          description: le nom du medecin (3 √† 20 caract√®res)
        prenoms:
          type: string
          description: le prenom du medecin (3 √† 50 caract√®res et nullable)
        tarif:
          type: integer
          description: le tarif journalier du medecin (100 Ar minimum üòÖ)
        imageUrl:
          type: string
          description: l'url du profile du medecin
      required:
        - numMedecin
        - nom
        - prenoms
        - tarif
      example:
        numMedecin: "numMedecin"
        nom: "nom"
        prenoms: "prenoms"
        tarif: 100
        imageUrl: "imageUrl"
    

    # Schema du patient
    Patient:
      type: object
      properties:
        id: 
          type: integer
          description: l'identifiant du patient
          readonly: true
        nom:
          type: string
          description: le nom du patient (3 √† 20 caract√®res)
        prenoms:
          type: string
          description: le prenom du patient (3 √† 50 caract√®res et nullable)
        genre:
          type: string
          description: le genre soit M ou F
        adresse:
          type: string
          description: l'adresse du patient (100 caract√®res maximum)
      required:
        - nom
        - genre
        - adresse
      example: 
        nom: "nom"
        prenoms: "prenoms"
        genre: "M"
        adresse: "adresse"


    # Schema du traitement
    Traitement:
      type: object
      properties:
        id:
          type: integer
          description: l'identifiant du traitement
          readonly: true
        patient_id: 
          type: integer
          description: l'identifiant du patient √† traiter
        medecin_id:
          type: integer
          description: l'identifiant du medecin traitant
        nbjour:
          type: integer
          description: le nombre du jour du traitement
        dateCons:
          type: date
          description: date du consulation (valeur par defaut date.now)
      required:
        - patient_id
        - medecin_id
        - nbjour
      example:
        patient_id: "patient_id"
        medecin_id: "medecin_id"
        dateCons: "dateCons"
        nbjour: 1
    

    #User
    User:
      type: object
      properties:
        id:
          type: integer
          description: l'identifiant de l'utilisateur
          readonly: true
        username:
          type: string
          description: pseudo de l'utilisateur
        email:
          type: string
          description: l'email de l'utilisateur
        password:
          type: string
          description: le mot de passe de l'utilisateur
      required:
        - username
        - email
        - password
      example:
        username: "username"
        email: "email@email.com"
        password: "password"
    
    #LOGIN
    Login:
      type: object
      properties:
        username:
          type: string
          description: pseudo de l'utilisateur
        password:
          type: string
          description: le mot de passe de l'utilisateur
      required:
        - username
        - password
      example:
        username: "username"
        password: "password"


# TAGS
tags:
  - name: Medecin
    description: Endpoint du medecin
  - name: Patient
    description: Endpoint du patient
  - name: Traitement
    description: Endpoint du traitement
  - name: Utilisateur
    description: Endpoint du utilisateur

paths:
  /api/medecins:
    get:
      summary: Recup√®rer tous les medecins
      tags: [Medecin]
      security:
        - jwt: []
      responses:
        '200':
          description: Affiche la liste des medecins
          content:
            application/json:
              schema:
                medecin_log:
                  type: array
                  items: object
        '401':
          description: Utilisateur non autoris√© pour lancer la requ√™te
        '500':
          description: Erreur du serveur
    post:
      summary: Cr√©er un medecin
      tags: [Medecin]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Medecin'
      security:
        - jwt: []
      responses:
        '201':
          description: Medecin ajout√©
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Medecin'
        '401':
          description: Utilisateur non autoris√© pour lancer la requ√™te
        '404':
          description: Medecin introuvable
        '500':
          description: Erreur du serveur
  /api/medecins/{id}:
    get:
      summary: Recup√®rer un medecin par id
      tags: [Medecin]
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: l'identifiant du medecin
      security:
        - jwt: []
      responses:
        '200':
          description: Affiche le medecin
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Medecin'
        '401':
          description: Utilisateur non autoris√© pour lancer la requ√™te
        '404':
          description: Medecin introuvable
        '500':
          description: Erreur du serveur
    put:
      summary: Modifier un medecin
      tags: [Medecin]
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: l'identifiant du medecin
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Medecin'
      security:
        - jwt: []
      responses:
        '200':
          description: Medecin modifi√©
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Medecin'
        '401':
          description: Utilisateur non autoris√© pour lancer la requ√™te
        '404':
          description: Medecin introuvable
        '500':
          description: Erreur du serveur
    delete:
      summary: Supprimer un medecin
      tags: [Medecin]
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: l'identifiant du medecin
      security:
        - jwt: []
      responses:
        '200':
          description: Medecin supprim√©
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Medecin'
        '401':
          description: Utilisateur non autoris√© pour lancer la requ√™te
        '404':
          description: Medecin introuvable
        '500':
          description: Erreur du serveur
  /api/patients:
    get:
      summary: Recup√®rer tous les patients
      tags: [Patient]
      security:
        - jwt: []
      responses:
        '200':
          description: Affiche la liste des patients
          content:
            application/json:
              schema:
                patient_log:
                  type: array
                  items: object
        '401':
          description: Utilisateur non autoris√© pour lancer la requ√™te
        '500':
          description: Erreur du serveur
    post:
      summary: Cr√©er un patient
      tags: [Patient]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Patient'
      security:
        - jwt: []
      responses:
        '201':
          description: Patient ajout√©
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Patient'
        '401':
          description: Utilisateur non autoris√© pour lancer la requ√™te
        '404':
          description: Patient introuvable
        '500':
          description: Erreur du serveur
  /api/patients/{id}:
    get:
      summary: Recup√®rer un patient par id
      tags: [Patient]
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: l'identifiant du patient
      security:
        - jwt: []
      responses:
        '200':
          description: Affiche le patient
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Patient'
        '401':
          description: Utilisateur non autoris√© pour lancer la requ√™te
        '404':
          description: Patient introuvable
        '500':
          description: Erreur du serveur
    put:
      summary: Modifier un patient
      tags: [Patient]
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: l'identifiant du patient
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Patient'
      security:
        - jwt: []
      responses:
        '200':
          description: Affiche le patient modifi√©
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Patient'
        '401':
          description: Utilisateur non autoris√© pour lancer la requ√™te
        '404':
          description: Patient introuvable
        '500':
          description: Erreur du serveur
    delete:
      summary: Supprimer un patient
      tags: [Patient]
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: l'identifiant du patient
      security:
        - jwt: []
      responses:
        '200':
          description: 
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Patient'
        '401':
          description: Utilisateur non autoris√© pour lancer la requ√™te
        '404':
          description: Patient introuvable
        '500':
          description: Erreur du serveur
  /api/traitements:
    get:
      summary: Recup√®rer tous les traitements
      tags: [Traitement]
      security:
        - jwt: []
      responses:
        '200':
          description: Affiche la liste des traitements
          content:
            application/json:
              schema:
                patient_log:
                  type: array
                  items: object
        '401':
          description: Utilisateur non autoris√© pour lancer la requ√™te
        '500':
          description: Erreur du serveur
    post:
      summary: Initier un traitement
      tags: [Traitement]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Traitement'
      security:
        - jwt: []
      responses:
        '201':
          description: Traitement ajout√©
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Traitement'
        '401':
          description: Utilisateur non autoris√© pour lancer la requ√™te
        '404':
         description: Traitement ou medecin ou patient introuvable
        '500':
          description: Erreur du serveur
  /api/traitements/{id}:
    get:
      summary: Recup√®rer un traitement par id
      tags: [Traitement]
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: l'identifiant du traitement
      security:
        - jwt: []
      responses:
        '200':
          description: Affiche le traitement en question
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Traitement'
        '401':
          description: Utilisateur non autoris√© pour lancer la requ√™te
        '404':
          description: Traitement introuvable
        '500':
          description: Erreur du serveur
    put:
      summary: Modifier un traitement
      tags: [Traitement]
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: l'identifiant du traitement
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Traitement'
      security:
        - jwt: []
      responses:
        '200':
          description: Affiche le traitement modifi√©
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Traitement'
        '401':
          description: Utilisateur non autoris√© pour lancer la requ√™te
        '404':
          description: Traitement ou medecin ou patient introuvable
        '500':
          description: Erreur du serveur
    delete:
      summary: Supprimer un traitement
      tags: [Traitement]
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: l'identifiant du traitement
      security:
        - jwt: []
      responses:
        '200':
          description: 
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Traitement'
        '401':
          description: Utilisateur non autoris√© pour lancer la requ√™te
        '404':
          description: Traitement introuvable 
        '500':
          description: Erreur du serveur
  /api/users:
    get:
      summary: Recup√®rer tous les utilisateurs
      tags: [Utilisateur]
      security:
        - jwt: []
      responses:
        '200':
          description: Affiche la liste des utilisateurs
          content:
            application/json:
              schema:
                patient_log:
                  type: array
                  items: object
        '401':
          description: Utilisateur non autoris√© pour lancer la requ√™te
        '500':
          description: Erreur du serveur
  /api/users/{id}:
    get:
      summary: Recup√®rer un utilisateur par id
      tags: [Utilisateur]
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: l'identifiant de l'utilisateur
      security:
        - jwt: []
      responses:
        '200':
          description: Affiche l'utilisateur
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '401':
          description: Utilisateur non autoris√© pour lancer la requ√™te
        '404':
          description: Utilisateur introuvable
        '500':
          description: Erreur du serveur
    put:
      summary: Modifier un utilisateur
      tags: [Utilisateur]
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: l'identifiant de l'utilisateur
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      security:
        - jwt: []
      responses:
        '200':
          description: Affiche le traitement modifi√©
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '401':
          description: Utilisateur non autoris√© pour lancer la requ√™te
        '404':
          description: Traitement introuvable
        '500':
          description: Erreur du serveur
    delete:
      summary: Supprimer un utilisateur
      tags: [Utilisateur]
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: l'identifiant de l'utilisateur
      security:
        - jwt: []
      responses:
        '200':
          description: 
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '401':
          description: Utilisateur non autoris√© pour lancer la requ√™te
        '404':
          description: Traitement ou patient ou medecin introuvable 
        '500':
          description: Erreur du serveur
  /api/register:
    post:
      summary: Cr√©er un utilisateur
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: Utilisateur ajout√©
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '500':
          description: Erreur du serveur
  /api/login:
    post:
      summary: Se connecter √† l'application
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Login'
      responses:
        '200':
          description: Avoir un access token
          content:
            application/json:
              schema:
                accessToken:
                  type: string
        '404':
          description: Utilisateur introuvable 
        '500':
          description: Erreur du serveur
  /api/logout:
    post:
      summary: Se deconnecter
      security:
        - jwt: []
      responses:
        '200':
          description: Utilisateur d√©connect√©
        '500':
          description: Erreur du serveur
  /api/refreshToken:
    get:
      summary: Refresh token
      security:
        - jwt: []
      responses:
        '200':
          description: Bon d'identifiant valid√©
          content:
            application/json:
              schema:
                accessToken:
                  type: string
        '404':
          description: Utilisateur introuvable 
        '401':
          description: Bon d'identifiant non valid√©
        '500':
          description: Erreur du serveur





        